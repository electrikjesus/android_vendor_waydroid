From d08af74eb68a72407c3472785a7be79e9ad0c59c Mon Sep 17 00:00:00 2001
From: Erfan Abdi <erfangplus@gmail.com>
Date: Fri, 10 Sep 2021 19:05:06 +0800
Subject: [PATCH 20/25] base: Always enable caption

Change-Id: I286146ebe9ed3557aecbb508cc846c82614ea5d6
---
 .../java/android/app/WindowConfiguration.java |  7 +++++++
 .../server/am/ActivityManagerService.java     | 20 +++++++++++++++++++
 .../com/android/server/wm/ActivityStack.java  |  3 +++
 3 files changed, 30 insertions(+)

diff --git a/core/java/android/app/WindowConfiguration.java b/core/java/android/app/WindowConfiguration.java
index a486b950..050aa93d 100644
--- a/core/java/android/app/WindowConfiguration.java
+++ b/core/java/android/app/WindowConfiguration.java
@@ -31,6 +31,7 @@ import android.content.res.Configuration;
 import android.graphics.Rect;
 import android.os.Parcel;
 import android.os.Parcelable;
+import android.os.SystemProperties;
 import android.util.proto.ProtoInputStream;
 import android.util.proto.ProtoOutputStream;
 import android.util.proto.WireTypeMismatchException;
@@ -688,6 +689,12 @@ public class WindowConfiguration implements Parcelable, Comparable<WindowConfigu
      * @hide
      */
     public boolean hasWindowDecorCaption() {
+        if (SystemProperties.getBoolean("persist.waydroid.multi_windows", false)) {
+            return (mWindowingMode == WINDOWING_MODE_FREEFORM
+                || mWindowingMode == WINDOWING_MODE_FULLSCREEN
+                || mWindowingMode == WINDOWING_MODE_UNDEFINED )
+                && getActivityType() != ACTIVITY_TYPE_HOME;
+        }
         return mActivityType == ACTIVITY_TYPE_STANDARD && (mWindowingMode == WINDOWING_MODE_FREEFORM
                 || mDisplayWindowingMode == WINDOWING_MODE_FREEFORM);
     }
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 0ae9cc27..ff361040 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -32,6 +32,10 @@ import static android.app.ActivityManager.PROCESS_STATE_TOP;
 import static android.app.ActivityManagerInternal.ALLOW_FULL_ONLY;
 import static android.app.ActivityManagerInternal.ALLOW_NON_FULL;
 import static android.app.AppOpsManager.OP_NONE;
+import static android.app.WindowConfiguration.WINDOWING_MODE_FREEFORM;
+import static android.app.WindowConfiguration.WINDOWING_MODE_PINNED;
+import static android.app.WindowConfiguration.WINDOWING_MODE_SPLIT_SCREEN_PRIMARY;
+import static android.app.WindowConfiguration.WINDOWING_MODE_SPLIT_SCREEN_SECONDARY;
 import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
 import static android.content.pm.ApplicationInfo.HIDDEN_API_ENFORCEMENT_DEFAULT;
 import static android.content.pm.PackageManager.GET_PROVIDERS;
@@ -155,6 +159,7 @@ import android.app.ActivityManager.RunningTaskInfo;
 import android.app.ActivityManager.StackInfo;
 import android.app.ActivityManagerInternal;
 import android.app.ActivityManagerProto;
+import android.app.ActivityOptions;
 import android.app.ActivityThread;
 import android.app.AppGlobals;
 import android.app.AppOpsManager;
@@ -3667,6 +3672,21 @@ public class ActivityManagerService extends IActivityManager.Stub
             String callingPackage, String callingFeatureId, Intent intent, String resolvedType,
             IBinder resultTo, String resultWho, int requestCode, int startFlags,
             ProfilerInfo profilerInfo, Bundle bOptions, int userId) {
+            if (bOptions == null) {
+                ActivityOptions activityOptions = ActivityOptions.makeBasic();
+                activityOptions.setLaunchWindowingMode(WINDOWING_MODE_FREEFORM);
+                bOptions = activityOptions.toBundle();
+            } else {
+                ActivityOptions activityOptions = new ActivityOptions(bOptions);
+                int windowingMode = activityOptions.getLaunchWindowingMode();
+                if (windowingMode != WINDOWING_MODE_PINNED
+                        && windowingMode != WINDOWING_MODE_SPLIT_SCREEN_PRIMARY
+                        && windowingMode != WINDOWING_MODE_SPLIT_SCREEN_SECONDARY) {
+                    activityOptions.setLaunchWindowingMode(WINDOWING_MODE_FREEFORM);
+                }
+                bOptions = activityOptions.toBundle();
+            }
+            
         return mActivityTaskManager.startActivityAsUser(caller, callingPackage,
                     callingFeatureId, intent, resolvedType, resultTo, resultWho, requestCode,
                     startFlags, profilerInfo, bOptions, userId);
diff --git a/services/core/java/com/android/server/wm/ActivityStack.java b/services/core/java/com/android/server/wm/ActivityStack.java
index 2899993b..be365819 100644
--- a/services/core/java/com/android/server/wm/ActivityStack.java
+++ b/services/core/java/com/android/server/wm/ActivityStack.java
@@ -771,6 +771,9 @@ class ActivityStack extends Task {
                 }
             }
 
+            if (mTmpRect2.isEmpty() && currentMode == WINDOWING_MODE_FREEFORM) {
+                resize(mTmpRect2, null /* tempTaskBounds */, null /* tempTaskInsetBounds */);
+            }
             if (!Objects.equals(getRequestedOverrideBounds(), mTmpRect2)) {
                 resize(mTmpRect2, false /*preserveWindows*/, true /*deferResume*/);
             }
-- 
2.30.2

